ggplot(data = data_iga) +
geom_histogram(mapping = aes(`D-weight` * (`D-height`)^2,
fill = `D-sex`),
alpha = 0.6) +
two_scale_fill +
# median BMI total
geom_vline(aes(xintercept = median(`D-weight` * (`D-height`)^2)),
size = 1.0, color = "red", linetype = "dashed") +
# median BMI F
geom_vline(aes(xintercept = median(`D-weight` * (`D-height`)^2)),
data = data_iga[`R-sex` == "F"], linetype = "dashed") +
# median BMI M
geom_vline(aes(xintercept = median(`D-weight` * (`D-height`)^2)),
data = data_iga[`R-sex` == "M"], linetype = "dashed") +
ylab("Anzahl") +
xlab("BMI") + # Einheit???
ggtitle("Histogramm BMI Iga") +
labs(fill = "Geschlecht") +
default_theme
# death donator
tbl_death_d <- cbind(c(nrow(data_iga[`Pat death (0=alive, 1= dead)` == 0]),
nrow(data_iga[`Pat death (0=alive, 1= dead)` == 1])),
c(nrow(data_iga_pos[`Pat death (0=alive, 1= dead)` == 0]),
nrow(data_iga_pos[`Pat death (0=alive, 1= dead)` == 1])),
c(nrow(data_iga_neg[`Pat death (0=alive, 1= dead)` == 0]),
nrow(data_iga_neg[`Pat death (0=alive, 1= dead)` == 1])))
colnames(tbl_death_d) <- c("iga_all", "iga_pos", "iga_neg")
rownames(tbl_death_d) <- c("Lebendspende", "Todspende")
p1 <- data.frame(group = c("Lebendspende", "Todspende"),
value = c(nrow(data_iga[`Pat death (0=alive, 1= dead)` == 0]),
nrow(data_iga[`Pat death (0=alive, 1= dead)` == 1]))) %>%
ggplot(aes(x = "", y = value, fill = group)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
guides(fill=guide_legend(title = "Spender")) +
theme_void() +
two_scale_fill +
ggtitle("iga all")
p2 <- data.frame(group = c("Lebendspende", "Todspende"),
value = c(nrow(data_iga_pos[`Pat death (0=alive, 1= dead)` == 0]),
nrow(data_iga_pos[`Pat death (0=alive, 1= dead)` == 1]))) %>%
ggplot(aes(x = "", y = value, fill = group)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
guides(fill=guide_legend(title = "Spender")) +
theme_void() +
two_scale_fill +
ggtitle("iga +")
p3 <- data.frame(group = c("Lebendspende", "Todspende"),
value = c(nrow(data_iga_neg[`Pat death (0=alive, 1= dead)` == 0]),
nrow(data_iga_neg[`Pat death (0=alive, 1= dead)` == 1]))) %>%
ggplot(aes(x = "", y = value, fill = group)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
guides(fill=guide_legend(title = "Spender")) +
theme_void() +
two_scale_fill +
ggtitle("iga -")
patch <- p1 | p2 | p3
patch + plot_annotation(title = "Kreisdiagramme Spender")
# deceased D.
# living D.
tbl_iga_1 <- summary(data_iga[`graft loss (0=functial, 1=loss)` == 1]$`D-type`)
tbl_iga_1 <- round(tbl_iga_1 / sum(tbl_iga_1), 3)
tbl_iga_2 <- summary(data_iga[`graft loss (0=functial, 1=loss)` == 0]$`D-type`)
tbl_iga_2 <- round(tbl_iga_2 / sum(tbl_iga_2),3)
rbind("loss" = tbl_iga_1, "functional" = tbl_iga_2) %>%
as.data.frame()
# dead/alive
tbl_iga_1 <- summary(data_iga[`Pat death (0=alive, 1= dead)` == 1]$`D-type`)
tbl_iga_1 <- round(tbl_iga_1 / sum(tbl_iga_1), 3)
tbl_iga_2<- summary(data_iga[`Pat death (0=alive, 1= dead)` == 0]$`D-type`)
tbl_iga_2 <-  round(tbl_iga_2 / sum(tbl_iga_2),3)  # in %
rbind("dead" = tbl_iga_1, "alive" = tbl_iga_2) %>%
as.data.frame()
# BMI (mean.)
tbl_iga_bmi <- data.table(
iga_all = mean(data_iga$`D-weight` * (data_iga$`D-height`)^2),
iga_pos = mean(data_iga_pos$`D-weight` * (data_iga_pos$`D-height`)^2),
iga_neg = mean(data_iga_neg$`D-weight` * (data_iga_neg$`D-height`)^2)
)
p1 <- data_iga %>%
ggplot() +
geom_boxplot(aes(x = "", y = mismatch_sum )) +
default_theme +
ggtitle("IGA all") +
ylab("") +
xlab("")
p2 <- data_iga_neg %>%
ggplot() +
geom_boxplot(aes(x = "", y = mismatch_sum)) +
default_theme +
ggtitle("IGA-") +
ylab("") +
xlab("")
p3 <- data_iga_pos %>%
ggplot() +
geom_boxplot(aes(x = "", y = mismatch_sum)) +
default_theme +
ggtitle("IGA+") +
ylab("") +
xlab("")
patch <- p1 | p2 | p3
patch + plot_annotation(title = "HLA mismatch summe")
# HLA-mm (0-6)
## data.table of mm-A, mm-B and mm-DR
tbl_iga_1 <- as.data.table(lapply(data_iga[, c("mm-A", "mm-B", "mm-DR")],
as.numeric))
## calculate mean for each column
tbl_iga_2 <- apply(X = tbl_iga_1,
MARGIN = 2,
FUN = mean, na.rm = TRUE)
round(tbl_iga_2, 3)
# mean of means
round(mean(tbl_iga_2),3)
## sum of mm-A, mm-B and mm-DR
tbl_iga_3 <- apply(X = tbl_iga_1,
MARGIN = 1,
FUN = sum, na.rm = TRUE)
# mean value of col sum
mean(tbl_iga_3)
# median value of col sum
sd(tbl_iga_3)
# PRA current (mean)
tbl_iga_pra_curr_mean <- data.frame(
iga_all = mean(data_iga$`Current PRA%`, na.rm = TRUE),
iga_pos = mean(data_iga_pos$`Current PRA%`, na.rm = TRUE),
iga_neg = mean(data_iga_neg$`Current PRA%`, na.rm = TRUE)
)
# PRA highest (mean)
tbl_iga_pra_high <- data.frame(
iga_all = mean(data_iga$`Highest PRA%`, na.rm = TRUE),
iga_pos = mean(data_iga_pos$`Highest PRA%`, na.rm = TRUE),
iga_neg = mean(data_iga_neg$`Highest PRA%`, na.rm = TRUE)
)
# age donor (mean.)
tbl_iga_age_donor <- data.frame(
iga_all = mean(data_iga$`D-age`),
iga_pos =  mean(data_iga_pos$`D-age`),
iga_neg =  mean(data_iga_neg$`D-age`)
)
# cold-ischemia time (hours)
# mean
tbl_iga_cis_mean <- data.frame(
iga_all = mean(data_iga$`Cold ischaemic period hours`, na.rm = TRUE),
iga_pos = mean(data_iga_pos$`Cold ischaemic period hours`, na.rm = TRUE),
iga_neg = mean(data_iga_neg$`Cold ischaemic period hours`, na.rm = TRUE)
)
# median
tbl_iga_cis_median <- data.frame(
iga_all = median(data_iga$`Cold ischaemic period hours`, na.rm = TRUE),
iga_pos = median(data_iga_pos$`Cold ischaemic period hours`, na.rm = TRUE),
iga_neg = median(data_iga_neg$`Cold ischaemic period hours`, na.rm = TRUE)
)
# standard error
tbl_iga_cis_sd <- data.frame(
iga_all = sd(data_iga$`Cold ischaemic period hours`, na.rm = TRUE),
iga_pos = sd(data_iga_pos$`Cold ischaemic period hours`, na.rm = TRUE),
iga_neg = sd(data_iga_neg$`Cold ischaemic period hours`, na.rm = TRUE)
)
p1 <- data_iga %>%
ggplot() +
geom_boxplot(aes(x = `Cold ischaemic period hours`)) +
coord_flip() +
ggtitle("IGA (all)") +
default_theme
p2 <- data_iga_pos %>%
ggplot() +
geom_boxplot(aes(x = `Cold ischaemic period hours`)) +
coord_flip() +
ggtitle("IGA +") +
default_theme
p3 <- data_iga_neg %>%
ggplot() +
geom_boxplot(aes(x = `Cold ischaemic period hours`)) +
coord_flip() +
ggtitle("IGA -") +
default_theme
p1$labels$x <- p2$labels$x <- p3$labels$x <- ""
p1$labels$y<- p2$labels$y <- p3$labels$y <- ""
patch <- p1 | p2 | p3
patch <- patch + plot_annotation(
title = "Boxplot Cold Isch. Time h"
)
patch & xlim(0, 40) & theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank()) & xlab("Cold Isch Time")
# living vs dead donator
tbl_iga_don_living_abs <- data.frame(
iga_all = nrow(data_iga[`D-type` == "Living"]),
iga_pos = nrow(data_iga_pos[`D-type` == "Living"]),
iga_neg = nrow(data_iga_neg[`D-type` == "Living"])
)
tbl_iga_don_dead_abs <- data.frame(
iga_all = nrow(data_iga[`D-type` == "Cadaver"]),
iga_pos = nrow(data_iga_pos[`D-type` == "Cadaver"]),
iga_neg = nrow(data_iga_neg[`D-type` == "Cadaver"])
)
tbl_iga_don_living_rel <- data.frame(
iga_all = nrow(data_iga[`D-type` == "Living"]) / nrow(data_iga),
iga_pos = nrow(data_iga_pos[`D-type` == "Living"]) / nrow(data_iga_pos),
iga_neg = nrow(data_iga_neg[`D-type` == "Living"]) / nrow(data_iga_neg)
)
tbl_iga_don_dead_rel <- data.frame(
iga_all = nrow(data_iga[`D-type` == "Cadaver"]) / nrow(data_iga),
iga_pos = nrow(data_iga_pos[`D-type` == "Cadaver"]) / nrow(data_iga_pos),
iga_neg = nrow(data_iga_neg[`D-type` == "Cadaver"]) / nrow(data_iga_neg)
)
iga_table <- rbindlist(
list(
iga_dropout = data.frame(
cbind(name = "dropout",tbl_iga_pat_drop)),
iga_graftloss = data.frame(
cbind(name = "graftloss", tbl_iga_graft_loss)),
iga_graftloss_follow_up = data.frame(
cbind(name = "graftloss_followup", tbl_iga_graft_loss_follow_up)),
iga_pat_death = data.frame(
cbind(name = "pat_death", tbl_iga_pat_death)),
iga_don_dead_abs = data.frame(
cbind(name = "don_dead_abs", tbl_iga_don_dead_abs)),
iga_don_dead_rel = data.frame(
cbind(name = "don_dead_rel", tbl_iga_don_dead_rel)),
iga_don_living_abs = data.frame(
cbind(name = "don_living_abs", tbl_iga_don_living_abs)),
iga_don_living_rel = data.frame(
cbind(name = "don_living_rel", tbl_iga_don_living_rel)),
iga_cis_h_mean = data.frame(
cbind(name = "cold_h_mean", tbl_iga_cis_mean)),
iga_cis_h_sd = data.frame(
cbind(name = "cold_h_sd", tbl_iga_cis_sd))
))
kable(iga_table, col.names = c("Merkmal", "IgA (all)", "IgA r+", "IgA r-")) %>%
kable_styling(latex_options = "hold_position")
# follow_up mean
pmin(
# follow up
interval(data_ntx$Datum, (data_ntx$Datum + follow_up)) / years(1),
# last seen
interval(data_ntx$Datum, data_ntx$tdls) / years(1)
) %>%
mean()
ggplot() +
geom_boxplot(aes(x = data_ntx$`TX Status[NTX PatientenInformation]`,
y = interval(data_ntx$Datum, data_ntx$tdls) / years(1)), data = data_ntx) +
default_theme +
ggtitle("Boxplot: Follow Up Period") +
ylab("Jahre") +
xlab("")
# patient death within follow up
nrow(data_ntx[`Todesdatum[NTX PatientenInformation]` < (Datum + follow_up)])
# patient drop out
nrow(data_ntx[`Date last seen[NTX PatientenInformation]` <= (Datum + follow_up) & `Patienten Status[NTX PatientenInformation]` == "1 - lebt"])
# patients with graft loss
nrow(data_ntx[data_ntx$`TX Status[NTX PatientenInformation]` == "2 - ohne Transplantatfunktion"])
# age patients (yrs.)
ggplot(data = data_ntx) +
geom_histogram(mapping = aes(x = R_age_Datum, fill = Geschlecht),
color = "#e9ecef", alpha = 0.6, position = "dodge") +
two_scale_fill +
ylab("Anzahl") +
xlab("Alter in Jahren") +
ggtitle("Histogram Alter in Jahren am Transplantationsdatum") +
labs(fill = "Geschlecht") +
default_theme
ggplot(data = data_ntx) +
geom_boxplot(aes(x = data_ntx$Geschlecht, y = data_ntx$R_age_Datum))  +
default_theme +
ggtitle("Boxplot Alter NTX") +
xlab("Geschlecht") +
ylab("Alter")
# male sex
summary(data_ntx$Geschlecht)
data.frame(group = names(summary(data_ntx$Geschlecht)),
value = c(summary(data_ntx$Geschlecht))) %>%
ggplot(aes(x = "", y = value, fill = group)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
guides(fill=guide_legend(title = "Geschlecht")) +
theme_void() +
two_scale_fill +
ggtitle("NTX")
# BMI (mean.)
## NO DATA AVAILABLE
# deceased D.
# living D.
## NO DATA AVAILABLE
# HLA-mm
## NO DATA AVAILABLE
# PPR
## NO DATA AVAILABLE
# living vs dead donator
## NO DATA AVAILABLE
#  functions in survival and survminer package need numeric-type input
data_iga[, time_date_biopsy := interval(`T-date`, `date of biopsy`) / years(1)]
data_iga[, time_t_dls := interval(`T-date`, `T-dls`) / years(1)]
data_iga[, time_date_birth := interval(`T-date`, `Date of birth`) / years(1)]
data_iga[, time_graft_loss := interval(`T-date`, `graft loss date`) / years(1)]
data_iga[, time_date_follow_up := interval(`T-date`,`T-date` + follow_up) / years(1)]
data_iga <- data_iga %>%
mutate(status_date = case_when(
## graft-loss within follow up period
!is.na(`graft loss date`) & `graft loss date` <  `T-date` + follow_up ~ time_graft_loss,
## graft-loss after follow up period
!is.na(`graft loss date`) & `graft loss date` >  `T-date` + follow_up ~ time_date_follow_up,
## no graft-loss and last seen within follow up
is.na(`graft loss date`) & !is.na(`T-dls`) & `T-dls` < `T-date` + follow_up ~ time_t_dls,
## no graft-loss and last seen after follow up
is.na(`graft loss date`) & !is.na(`T-dls`) & `T-dls` > `T-date` + follow_up ~ time_date_follow_up,
## no graft loss and no last seen
is.na(`graft loss date`) & is.na(`T-dls`) ~ time_date_follow_up
)
)
data_iga <- data_iga %>%
mutate(status = case_when(
## graft-loss within follow up period
!is.na(`graft loss date`) & `graft loss date` <  `T-date` + follow_up ~ 1,
## else censored
TRUE ~ 0,
)
)
data_iga_pos <- data_iga[`biopsy proven recurrence (0=no, 1=yes)` == 1]
data_iga_neg <- data_iga[`biopsy proven recurrence (0=no, 1=yes)` == 0]
model_iga_1 <- survfit(formula = Surv(time = status_date, event = status, type = "right") ~ data_iga$`biopsy proven recurrence (0=no, 1=yes)`, data_iga)
ggsurvplot(model_iga_1)
model_iga_1.1 <- survfit(formula = Surv(time = status_date,
event = status, type = "right")~ 1,
data = data_iga)
ggsurvplot(model_iga_1.1,
conf.int = FALSE,
cumevents = TRUE)
## iga+
model_iga_1.1 <- survfit(formula = Surv(time = status_date,
event = status, type = "right")~ 1,
data = data_iga_pos)
ggsurvplot(model_iga_1.1,
conf.int = FALSE,
cumevents = TRUE)
## iga-
model_iga_1.2 <- survfit(formula = Surv(time = status_date,
event = status, type = "right")~ 1,
data = data_iga_neg)
ggsurvplot(model_iga_1.2,
conf.int = FALSE,
cumevents = TRUE)
data_iga <- data_iga %>%
mutate(status_date = case_when(
## patient death and death date within follow up
(`Pat death (0=alive, 1= dead)` == 1) & `T-dls` < `T-date` + follow_up ~ time_t_dls,
## patient dead but after follow up
(`Pat death (0=alive, 1= dead)` == 1) & `T-dls` > `T-date` + follow_up ~ time_date_follow_up,
## patient not death but dropped within follow up
(`Pat death (0=alive, 1= dead)` == 0) & `T-dls` < `T-date` + follow_up ~ time_t_dls,
## patient not death but dropped after follow up
(`Pat death (0=alive, 1= dead)` == 0) & `T-dls` > `T-date` + follow_up ~ time_date_follow_up,
## NOTE: T-dls never NA
)
)
model_iga_2 <- survfit(formula = Surv(time = status_date,
event = status, type = "right") ~ data_iga$`biopsy proven recurrence (0=no, 1=yes)`,
data = data_iga)
ggsurvplot(model_iga_2,
conf.int = FALSE)
data_ntx <- data_ntx %>%
mutate(status_date = case_when(
## patient experienced graft loss
!is.na(Transplantatfunktionsende) & Transplantatfunktionsende <= (Datum + follow_up) ~ interval(Datum, Transplantatfunktionsende) / years(1),
## patient died within follow up
`Todesdatum[NTX PatientenInformation]` < (Datum + follow_up) ~ interval(Datum, `Todesdatum[NTX PatientenInformation]`) / years(1),
## patiend last seen within follow up
`Date last seen[NTX PatientenInformation]` < (Datum + follow_up) ~ interval(Datum, `Date last seen[NTX PatientenInformation]`) / years(1),
## else follow up
TRUE ~ interval(Datum, (Datum + follow_up)) / years(1)
)
)
data_ntx <- data_ntx %>%
mutate(status = case_when(
## patient experienced graft loss
!is.na(Transplantatfunktionsende) & Transplantatfunktionsende <= (Datum + follow_up) ~ 1,
## patient died within follow up
`Todesdatum[NTX PatientenInformation]` < (Datum + follow_up) ~ 0,
## patiend last seen within follow up
`Date last seen[NTX PatientenInformation]` < (Datum + follow_up) ~ 0,
## else follow up
TRUE ~ 0
)
)
model_ntx_1 <- survfit(formula = Surv(time = status_date,
event = status, type = "right") ~ 1,
data = data_ntx)
ggsurvplot(model_ntx_1,
conf.int = FALSE,
cumevents = TRUE)
data_ntx <- data_ntx %>%
mutate(status_date = case_when(
## patient died within follow up
`Todesdatum[NTX PatientenInformation]` <= (Datum + follow_up) ~ interval(Datum, `Todesdatum[NTX PatientenInformation]`) / years(1),
## patient died after follow up
`Todesdatum[NTX PatientenInformation]` > (Datum + follow_up) ~ interval(Datum, (Datum + follow_up)) / years(1),
## patient dropped within follow up
`Date last seen[NTX PatientenInformation]` <= (Datum + follow_up) ~ interval(Datum, `Date last seen[NTX PatientenInformation]`) / years(1),
## patient dropped after follow up
`Date last seen[NTX PatientenInformation]` > (Datum + follow_up) ~ interval(Datum, (Datum + follow_up)) / years(1)
)
)
data_ntx <- data_ntx %>%
mutate(status = case_when(
## patient died within follow up
`Todesdatum[NTX PatientenInformation]` <= (Datum + follow_up) ~ 1,
## patient died after follow up
`Todesdatum[NTX PatientenInformation]` > (Datum + follow_up) ~ 0,
## patient dropped within follow up
`Date last seen[NTX PatientenInformation]` <= (Datum + follow_up) ~ 0,
## patient dropped after follow up
`Date last seen[NTX PatientenInformation]` > (Datum + follow_up) ~ 0
)
)
model_ntx_2 <- survfit(Surv(time = status_date, event = status,
type = "right") ~1, data = data_ntx)
ggsurvplot(model_ntx_2,
conf.int = FALSE,
cumevents = TRUE)
data_iga <- data_iga %>%
## censor/event date
mutate(status_date = case_when(
## patient dropped during follow up
(`T-dls` <= `T-date` + follow_up) ~ `T-dls`,
## patient experienced graft loss but after follow up
((!is.na(`graft loss date`)) &  (`graft loss date` > `T-date` + follow_up)) ~ `T-date` + follow_up,
## patient experienced graft loss within follow up
((!is.na(`graft loss date`)) &  (`graft loss date` <= `T-date` + follow_up)) ~ `graft loss date`,
## patient experienced no graft loss within follow up, neither dropped
(is.na(`graft loss date`) & (`T-dls` > `T-date` + follow_up)) ~ `T-date` + follow_up
)) %>%
## status indicator
mutate(status = case_when(
## patient dropped during follow up
(`T-dls` <= `T-date` + follow_up) ~ 0,
## patient experienced graft loss but after follow up
((!is.na(`graft loss date`)) &  (`graft loss date` > `T-date` + follow_up)) ~ 0,
## patient experienced graft loss within follow up
((!is.na(`graft loss date`)) &  (`graft loss date` <= `T-date` + follow_up)) ~ 1,
## patient experienced no graft loss within follow up, neither dropped
(is.na(`graft loss date`) & (`T-dls` > `T-date` + follow_up)) ~ 0
))
data_iga <- data_iga %>%
## censor/event date
mutate(status_date = case_when(
## if graft loss within follow up
`graft loss date` <= `T-date` + follow_up ~ `graft loss date`,
## else
TRUE ~ `T-dls`
)) %>%
## censor/event indicator
mutate(status = case_when(
## if graft loss within follow up
data_iga$`graft loss date` <= data_iga$`T-date` + follow_up ~ 1,
## else
TRUE ~ 0
))
data_iga_pos <- data_iga[`biopsy proven recurrence (0=no, 1=yes)` == 1]
data_iga_neg <- data_iga[`biopsy proven recurrence (0=no, 1=yes)` == 0]
model_iga_cox <- coxph(data = data_iga, formula = Surv(time = as.numeric(status_date),
event = status) ~ R_age_Tdate +
data_iga$`R-sex` +
data_iga$`D-type` +
## hla mismatch???
data_iga$`mm-A` +
data_iga$`Cold ischaemic period hours` +
data_iga$`D-age`)
summary(model_iga_cox)
cox.zph(model_iga_cox)
## all p-values are relatively large, therefore the Null hypothesis of proportional hazards can not be rejected
data_ntx <- data_ntx %>%
mutate(status_date = case_when(
## patient died within follow up
`Todesdatum[NTX PatientenInformation]` <= (Datum + follow_up) ~ interval(Datum, `Todesdatum[NTX PatientenInformation]`) / years(1),
## patient died after follow up
`Todesdatum[NTX PatientenInformation]` > (Datum + follow_up) ~ interval(Datum, Datum + follow_up) / years(1),
## patient dropped within follow up
`Date last seen[NTX PatientenInformation]` <= (Datum + follow_up) ~ interval(Datum, `Date last seen[NTX PatientenInformation]`) / years(1),
## patient dropped after follow up
`Date last seen[NTX PatientenInformation]` > (Datum + follow_up) ~ interval(Datum, Datum + follow_up) / years(1)
)
)
data_ntx <- data_ntx %>%
mutate(status = case_when(
## patient died within follow up
`Todesdatum[NTX PatientenInformation]` <= (Datum + follow_up) ~ 1,
## patient died after follow up
`Todesdatum[NTX PatientenInformation]` > (Datum + follow_up) ~ 0,
## patient dropped within follow up
`Date last seen[NTX PatientenInformation]` <= (Datum + follow_up) ~ 0,
## patient dropped after follow up
`Date last seen[NTX PatientenInformation]` > (Datum + follow_up) ~ 0
)
)
model_ntx_cox <- coxph(formula = Surv(time = status_date, event = status) ~ R_age_Datum +
Geschlecht + `TX Status[NTX PatientenInformation]`,
data = data_ntx)
summary(model_ntx_cox)
cox.zph(model_ntx_cox)
## all p-values are relatively large, therefore the Null hypothesis of proportional hazards can not be rejected
data_ntx$Geschlecht
data_ntx$`TX Status[NTX PatientenInformation]`
model_ntx_cox <- coxph(formula = Surv(time = status_date, event = status) ~ R_age_Datum +
`TX Status[NTX PatientenInformation]`,
data = data_ntx)
summary(model_ntx_cox)
summary(model_ntx_cox)
model_ntx_cox <- coxph(formula = Surv(time = status_date, event = status) ~ R_age_Datum +
Geschlecht + `TX Status[NTX PatientenInformation]`,
data = data_ntx)
summary(model_ntx_cox)
